%tr{:class => cycle('odd', 'even')}
  %td= link_to(truncate(tx.hash, :length => 16), tx_path(tx.hash))
  %td
    %table.tx_ins{cellpadding: 0, cellspacing: 0}
      - if tx.in.size == 1 && tx.in[0].coinbase?
        %tr
          %td coinbase
      - else
        - tx.in.map do |i|
          - prev_tx = STORE.db[:tx][hash: i.prev_out_hash.reverse.to_sequel_blob]
          - prev_out = STORE.db[:txout][tx_id: prev_tx[:id], tx_idx: i.prev_out_index]
          - if prev_out
            %tr
              - addr = Bitcoin::Script.new(prev_out[:pk_script]).get_address
              %td= address_link(addr)
              %td (#{format_amount prev_out[:value]})
          - else
            %tr
              %td not seen

  %td
    %table.tx_outs{cellpadding: 0, cellspacing: 0}
      - tx.out.map do |o|
        %tr
          %td
            - if o.parsed_script.type == :unknown
              %span{class: "error"} Unknown script type
            - elsif o.parsed_script.type == :op_return
              OP_RETURN (provably burned)
            - else
              - o.get_addresses.map do |addr|
                = address_link(addr)
                %br/
          %td (#{format_amount o.value})
  %td.right= number_to_human_size tx.to_payload.bytesize
  %td.value= format_amount(tx.out.map(&:value).sum)